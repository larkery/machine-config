#!/usr/bin/env python3

import secretstorage
import subprocess

def get_fields(entry): pass

def get_item(entry):
    conn = secretstorage.dbus_init()
    coll = secretstorage.get_default_collection(conn)
    coll.unlock()
    items = coll.search_items({"Path": entry})
    for item in items:
        u = item.unlock()
        r = item.get_attributes()
        r['password'] = item.get_secret().decode('utf-8')
        if 'UserName' in r:
            r['user'] = r['UserName']
            del r['UserName']
        return {k: r[k] for k in r if r[k] != ''
                and k not in ["Title", "Uuid", "Path"]}
    
def get_value(entry, field):
    i = get_item(entry)
    if not(i): return
    if field in i: return i[field]

def do_copy(entry, field):
    v = get_value(entry, field)
    subprocess.run(["xclip", "-quiet", "-l", "1", "-selection", "primary"],
                   input = v, encoding = 'utf-8')

def xte(text):
    subprocess.run(["xte"],
                   input = f"str {text}\n",
                   encoding = 'utf-8')

    
def do_echo(entry, field):
    print(get_value(entry, field), end='')

def do_open(entry):
    item = get_item(entry)
    if not(item): return;

    yad = ["yad", "--class", "password-input", "--mouse", "--title", f"pass: {entry}", "--text", f"<b>{entry}</b>", "--form"]

    if 'Notes' in item:
        yad.extend(
            ["--height=400",
             "--width=400",
             "--columns=1",
             item['Notes'],
            "--field=Notes:txt"])
        del item['Notes']
    else:
        yad.extend(["--width=200", "--columns=1"])

    for field in item:
        yad.append(f"--field={field}:fbtn")
        yad.append(f"echo '{field}'")

    yad.extend([
        "--button=Cancel!gtk-cancel:0",
        "--on-top",
        "--no-focus",
        "--borders=8"
    ])
    
    proc = subprocess.Popen(yad, stdout=subprocess.PIPE, encoding='utf-8')
    for line in iter(proc.stdout.readline, ''):
        button = line.rstrip()
        if button in item:
            if button == 'URL':
                subprocess.run(["xdg-open", item [button]])
            else: xte(item[button])

def choose_entry():
    conn = secretstorage.dbus_init()
    coll = secretstorage.get_default_collection(conn)
    coll.unlock()
    proc = subprocess.run(["rofi", "-dmenu", "-p", "password", "-no-custom", "-async-pre-read", "0"] , encoding = 'utf-8', input = "\n".join(item.get_label() for item in coll.get_all_items()), capture_output = True)
    if proc.returncode == 0:
        return proc.stdout.strip()
            
def main():
    import argparse
    parser = argparse.ArgumentParser(description = 'Secret storage interface for keepass')
    parser.add_argument('--copy', action="store_true")
    parser.add_argument("--print", action="store_true")
    parser.add_argument("--open", action="store_true")
    parser.add_argument("--field", default="password")
    parser.add_argument("entry", nargs='?')
    a = parser.parse_args()
    
    if not(a.entry):
        entry = choose_entry()
        if not(entry): return
    else:
        entry = a.entry
    field = a.field
    if a.copy: do_copy(entry, field)
    elif a.print: do_echo(entry, field)
    else: do_open(entry)
        
if __name__ == '__main__': main()
